// oglLimitsAndSettings.hpp



#pragma once

#include <vector>

#ifdef OGLLIMITSANDSETTINGS_EXPORTS
#define DllExport   __declspec( dllexport )
#else
#define DllExport   __declspec( dllimport )
#endif

namespace OGLLimitsAndSettings_ns
{
  enum class OGL_SINGLE_VALUE_LIMITS
  {
    MAX_COMPUTE_SHADER_STORAGE_BLOCKS
    , MAX_COMBINED_SHADER_STORAGE_BLOCKS
    , MAX_COMPUTE_UNIFORM_BLOCKS
    , MAX_COMPUTE_TEXTURE_IMAGE_UNITS
    , MAX_COMPUTE_UNIFORM_COMPONENTS
    , MAX_COMPUTE_ATOMIC_COUNTERS
    , MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
    , MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
    , MAX_COMPUTE_WORK_GROUP_INVOCATIONS
    , MAX_COMPUTE_WORK_GROUP_COUNT
    , MAX_COMPUTE_WORK_GROUP_SIZE
    , MAX_DEBUG_GROUP_STACK_DEPTH
    , MAX_3D_TEXTURE_SIZE
    , MAX_ARRAY_TEXTURE_LAYERS
    , MAX_CLIP_DISTANCES
    , MAX_COLOR_TEXTURE_SAMPLES
    , MAX_COMBINED_ATOMIC_COUNTERS
    , MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
    , MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS
    , MAX_COMBINED_TEXTURE_IMAGE_UNITS
    , MAX_COMBINED_UNIFORM_BLOCKS
    , MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
    , MAX_CUBE_MAP_TEXTURE_SIZE
    , MAX_DEPTH_TEXTURE_SAMPLES
    , MAX_DRAW_BUFFERS
    , MAX_DUAL_SOURCE_DRAW_BUFFERS
    , MAX_ELEMENTS_INDICES
    , MAX_ELEMENTS_VERTICES
    , MAX_FRAGMENT_ATOMIC_COUNTERS
    , MAX_FRAGMENT_SHADER_STORAGE_BLOCKS
    , MAX_FRAGMENT_INPUT_COMPONENTS
    , MAX_FRAGMENT_UNIFORM_COMPONENTS
    , MAX_FRAGMENT_UNIFORM_VECTORS
    , MAX_FRAGMENT_UNIFORM_BLOCKS
    , MAX_FRAMEBUFFER_WIDTH
    , MAX_FRAMEBUFFER_HEIGHT
    , MAX_FRAMEBUFFER_LAYERS
    , MAX_FRAMEBUFFER_SAMPLES
    , MAX_GEOMETRY_ATOMIC_COUNTERS
    , MAX_GEOMETRY_SHADER_STORAGE_BLOCKS
    , MAX_GEOMETRY_INPUT_COMPONENTS
    , MAX_GEOMETRY_OUTPUT_COMPONENTS
    , MAX_GEOMETRY_TEXTURE_IMAGE_UNITS
    , MAX_GEOMETRY_UNIFORM_BLOCKS
    , MAX_GEOMETRY_UNIFORM_COMPONENTS
    , MAX_INTEGER_SAMPLES
    , MAX_LABEL_LENGTH
    , MAX_PROGRAM_TEXEL_OFFSET
    , MAX_RECTANGLE_TEXTURE_SIZE
    , MAX_RENDERBUFFER_SIZE
    , MAX_SAMPLE_MASK_WORDS
    , MAX_SERVER_WAIT_TIMEOUT
    , MAX_SHADER_STORAGE_BUFFER_BINDINGS
    , MAX_TESS_CONTROL_ATOMIC_COUNTERS
    , MAX_TESS_EVALUATION_ATOMIC_COUNTERS
    , MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS
    , MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS
    , MAX_TEXTURE_BUFFER_SIZE
    , MAX_TEXTURE_IMAGE_UNITS
    , MAX_TEXTURE_LOD_BIAS
    , MAX_TEXTURE_SIZE
    , MAX_UNIFORM_BUFFER_BINDINGS
    , MAX_UNIFORM_BLOCK_SIZE
    , MAX_UNIFORM_LOCATIONS
    , MAX_VARYING_COMPONENTS
    , MAX_VARYING_VECTORS
    , MAX_VARYING_FLOATS
    , MAX_VERTEX_ATOMIC_COUNTERS
    , MAX_VERTEX_ATTRIBS
    , MAX_VERTEX_SHADER_STORAGE_BLOCKS
    , MAX_VERTEX_TEXTURE_IMAGE_UNITS
    , MAX_VERTEX_UNIFORM_COMPONENTS
    , MAX_VERTEX_UNIFORM_VECTORS
    , MAX_VERTEX_OUTPUT_COMPONENTS
    , MAX_VERTEX_UNIFORM_BLOCKS
    , MAX_VIEWPORT_DIMS
    , MAX_VIEWPORTS
    , MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
    , MAX_VERTEX_ATTRIB_BINDINGS
    , MAX_ELEMENT_INDEX
    , MIN_MAP_BUFFER_ALIGNMENT
    , MIN_PROGRAM_TEXEL_OFFSET
    , NUM_COMPRESSED_TEXTURE_FORMATS
    , NUM_EXTENSIONS
    , NUM_PROGRAM_BINARY_FORMATS
    , NUM_SHADER_BINARY_FORMATS
    , COUNT

  };

  DllExport std::vector<int> const GetSingleValueLimits() noexcept;
}
